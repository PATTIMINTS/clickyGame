{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Nav/Nav.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","image","Nav","href","title","rORw","score","topScore","Wrapper","children","Title","App","state","friends","currentScore","clicked","_this","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledFriends","array","i","length","j","Math","floor","random","_ref","shuffleFriends","_this2","this","components_Wrapper_Wrapper","components_Nav_Nav","components_Title_Title","map","friend","components_FriendCard_FriendCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.203df389.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n    \n  <div className=\"card\"\n  value={props.id} \n  onClick={() => props.handleClick(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n    <div className=\"content\">\n      <ul>\n        <li>\n          <strong>Name:</strong> {props.name}\n        </li>\n      </ul>\n    </div>\n  </div>\n  \n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n    \n    <nav className=\"navbar navbar-dark bg-dark\">\n      <ul>\n        <li className=\"brand animated lightSpeedIn\">\n          <a href=\"/clickgame/\">{props.title}</a>\n        </li>\n  \n        <li id=\"rORw\">{props.rORw}</li>\n  \n        <li id=\"cur-sco\">Current Score: {props.score}</li>\n  \n        <li id=\"top-sco\">Top Score: {props.topScore}</li>\n      </ul>\n    </nav>\n   \n  );\nexport default Nav;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nfunction shuffleFriends(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};\n\n\nclass App extends Component {\n    // Setting this.state.friends to the friends json array\n    state = {\n        friends,\n        currentScore: 0,\n        topScore: 0,\n        rORw: \"\",\n        clicked: [],\n\n\n    };\n\n    handleClick = id => {\n        if (this.state.clicked.indexOf(id) === -1) {\n            this.handleIncrement();\n            this.setState({ clicked: this.state.clicked.concat(id) });\n        } else {\n            this.handleReset();\n        }\n    };\n    handleIncrement = () => {\n        const newScore = this.state.currentScore + 1;\n        this.setState({\n            currentScore: newScore,\n            rORw: \"\"\n        });\n        if (newScore >= this.state.topScore) {\n            this.setState({ topScore: newScore });\n        }\n        else if (newScore === 11) {\n            this.setState({ rORw: \"You win!\" });\n        }\n\n        this.handleShuffle();\n    }; handleReset = () => {\n        this.setState({\n            currentScore: 0,\n            topScore: this.state.topScore,\n            rORw: \"Later Boners!\",\n            clicked: []\n        });\n        this.handleShuffle();\n    };\n    \n    handleShuffle = () => {\n        let shuffledFriends = shuffleFriends(friends);\n        this.setState({ friends: shuffledFriends });\n    };\n\n\n    render() {\n        return (\n            <Wrapper>\n                <Nav\n                    title=\"It's Always Sunny Friends click Game\"\n                    score={this.state.currentScore}\n                    topScore={this.state.topScore}\n                    rORw={this.state.rORw}>\n                </Nav>\n                <Title>Click on each character once.</Title>\n                {this.state.friends.map(friend => (\n                    <FriendCard\n\n                        id={friend.id}\n                        key={friend.id}\n                        handleClick={this.handleClick}\n                        handleIncrement={this.handleIncrement}\n                        handleReset={this.handleReset}\n                        handleShuffle={this.handleShuffle}\n                        name={friend.name}\n                        image={friend.image}\n\n                    />\n                ))}\n            </Wrapper>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}